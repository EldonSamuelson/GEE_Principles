//Source: https://gis.stackexchange.com/questions/421943/automate-max-and-mix-values-of-a-raster-in-my-color-palette-on-google-earth-engi
// Worth visiting for more context and application of Legends also.
// e.g. More developed: https://code.earthengine.google.com/967aa5da56bb42c29af5a8e9f0123645

// Pull the package from the GitHub repo which stores colour palettes to be used in GEE
// See https://github.com/gee-community/ee-palettes for more info
var palettes = require('users/gena/packages:palettes');
var HSpalette = palettes.niccoli.cubicl[7];

// Define region of interest
var regionOfInterest = ee.FeatureCollection("FAO/GAUL/2015/level0").filter(ee.Filter.eq('ADM0_NAME', 'Switzerland'));

// Image of interest
var img = ee.Image("WWF/HydroSHEDS/03VFDEM").clip(regionOfInterest);

// Centre the Map on the RoI
Map.centerObject(regionOfInterest,8);


var visParam = {
        min: 116,
        max: 4420,
        palette: HSpalette
        };

//Adds the DEM Layer to the map with the visualisation parameters
Map.addLayer(img, visParam, "Switzerland DEM");

// Legend Stuff

//LEGEND VERSION 1 (Horizontal, Centered, position is not easily changed)

// Creates a 7-step color bar thumbnail image for use in legend from the given color palette
function makeColorBarParams(palette) {
  return {
    bbox: [0, 0, 7, 0.1],
    dimensions: '100x10',
    format: 'png',
    min: 0,
    max: 7,
    palette: HSpalette,
  };
}

// Create the colour bar for the legend
var colorBar = ui.Thumbnail({
  image: ee.Image.pixelLonLat().select('longitude').int(),
  params: makeColorBarParams(visParam.palette),
  style: {position: 'bottom-left', stretch: 'horizontal', margin: '0px 8px', maxHeight: '24px'},
});

// Create a panel with three numbers for the legend
var legendLabels = ui.Panel({
  widgets: [
    ui.Label(visParam.min, {margin: '4px 8px'}),
    ui.Label(
        ((visParam.max-visParam.min) / 2+visParam.min),
        {margin: '4px 8px', textAlign: 'center', stretch: 'horizontal'}),
    ui.Label(visParam.max, {margin: '4px 8px'})
  ],
  layout: ui.Panel.Layout.flow('horizontal')
});

// Legend title
var legendTitle = ui.Label({
  value: 'Legend 1 - Height (m)',
  style: {fontWeight: 'bold'}
});

// Add the legendPanel to the map
var legendPanel = ui.Panel([legendTitle, colorBar, legendLabels]);
Map.add(legendPanel);

// LEGEND VERSION 2 (Vertical, Stepped, position can be changed intuitively)
//Source: https://mygeoblog.com/2017/03/02/creating-a-gradient-legend/
// Creates a 7-step color bar thumbnail image for use in legend from the given color palette
function makeColorBarParams2(palette) {
  return {
    bbox: [7, 0, 0, 8],
    dimensions: '10x196',
    format: 'png',
    min: 0,
    max: 7,
    palette: HSpalette,
  };
}
// set position of panel
var legendpos = ui.Panel({
  style: {
    position: 'bottom-left',
    padding: '8px 15px'
  }
});
 
 
// Create legend title
var legendTitle2 = ui.Label({
  value: 'Legend 2 - Height (m)',
  style: {
    fontWeight: 'bold',
    fontSize: '16px',
    margin: '0 0 4px 0',
    padding: '0'
    }
});

 // Add the title to the panel
legendpos.add(legendTitle2); 

// create text on top of legend
var panel = ui.Panel({
    widgets: [
      ui.Label(visParam['max'])
    ],
  });

legendpos.add(panel);
  
// create thumbnail from the image
var thumbnail = ui.Thumbnail({
  image: ee.Image.pixelLonLat().select('latitude').int(),
  params: makeColorBarParams2(visParam.palette),
  style: {position: 'bottom-center', stretch: 'vertical', margin: '0px 8px', maxHeight: '200px'}
  //style: {padding: '1px', position: 'bottom-center'}
});

// add the thumbnail to the legend
legendpos.add(thumbnail);

// create text on bottom of legend
var panel2 = ui.Panel({
    widgets: [
      ui.Label(visParam['min'])
    ],
  });

legendpos.add(panel2);

Map.add(legendpos);

//LEGEND 3 (Vertical, Gradient, position can be changed intuitvely)
// set position of panel
var legendpos3 = ui.Panel({
  style: {
    position: 'bottom-right',
    padding: '8px 15px'
  }
});
 
// Create legend title
var legendTitle3 = ui.Label({
  value: 'Legend 3 - Height (m)',
  style: {
    fontWeight: 'bold',
    fontSize: '16px',
    margin: '0 0 4px 0',
    padding: '0'
    }
});

 // Add the title to the panel
legendpos3.add(legendTitle3); 

// create the legend image
var lon = ee.Image.pixelLonLat().select('latitude');
var gradient = lon.multiply((visParam.max-visParam.min)/100).add(visParam.min);
var legendImage = gradient.visualize(visParam);

// create text on top of legend
var panel3 = ui.Panel({
    widgets: [
      ui.Label(visParam['max'])
    ],
  });

legendpos3.add(panel3);
  
// create thumbnail from the image
var thumbnail3 = ui.Thumbnail({
  image: legendImage, 
  params: {bbox:'0,0,10,100', dimensions:'10x200'},  
  style: {padding: '1px', position: 'bottom-center'}
});

// add the thumbnail to the legend
legendpos3.add(thumbnail3);

// create text on top of legend
var panel4 = ui.Panel({
    widgets: [
      ui.Label(visParam['min'])
    ],
  });

legendpos3.add(panel4);

Map.add(legendpos3);

