// Source: https://gis.stackexchange.com/questions/366055/how-to-add-a-timeline-tool-to-time-lapse-in-gee?noredirect=1&lq=1
// Also: https://gis.stackexchange.com/questions/326899/google-earth-engine-add-text-label-at-lat-lon-location
// Define an area of interest geometry with a global non-polar extent.
var aoi = ee.Geometry.Polygon(
  [[[-179.0, 78.0], [-179.0, -58.0], [179.0, -58.0], [179.0, 78.0]]], null,
  false);
var geometry = /* color: #d63000 */ee.Geometry.Point([19.663621145272657, -42.364883474766835]);

// Import hourly predicted temperature image collection for northern winter
// solstice. Note that predictions extend for 384 hours; limit the collection
// to the first 24 hours.
var tempCol = ee.ImageCollection('NOAA/GFS0P25')
  .filterDate('2018-12-22', '2018-12-23')
  .limit(24)
  .select('temperature_2m_above_ground');

Map.addLayer(tempCol,{ //convert each frame to RGB image explicitly since it is a 1 band image
      forceRgbOutput: true,
      min: -40,
      max: 35,
      palette: ['blue', 'purple', 'cyan', 'green', 'yellow', 'red']
    });
Map.centerObject(tempCol,2);

// Define arguments for animation function parameters.
var videoArgs = {
  dimensions: 768,
  region: aoi,
  framesPerSecond: 6,
  crs: 'EPSG:3857',
};

var text = require('users/gena/packages:text'); // Import gena's package which allows text overlay on image

var annotations = [
  {position: 'right', offset: '1%', margin: '1%', property: 'label', scale: 200000} //large scale because image if of the whole world. Use smaller scale otherwise
  ]
  
function addText(image){
  
  var timeStamp = ee.Number(image.get('forecast_hours')).toByte(); // get the time stamp of each frame. This can be any string. Date, Years, Hours, etc.
  var timeStamp = ee.String('Forecast: ').cat(ee.String(timeStamp)).cat(ee.String(' hours')); //convert time stamp to string 
  var image = image.visualize({ //convert each frame to RGB image explicitly since it is a 1 band image
      forceRgbOutput: true,
      min: -40,
      max: 35,
      palette: ['blue', 'purple', 'cyan', 'green', 'yellow', 'red']
    }).set({'label':timeStamp}); // set a property called label for each image
  
  var annotated = text.annotateImage(image, {}, geometry, annotations); // create a new image with the label overlayed using gena's package

  return annotated 
}

var tempCol = tempCol.map(addText) //add time stamp to all images
  
print(ui.Thumbnail(tempCol, videoArgs)); //print gif

