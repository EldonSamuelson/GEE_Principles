// Date Range
var START = ee.Date('2015-01-01');
var END = ee.Date('2023-05-15');
//Visualisations
var RGBVis = {
  min: 0,
  max: 0.25,
  bands: ['B4', 'B3', 'B2'],
};
var NIRVis = {
  min: 0,
  max: 0.55,
  bands: ['B8', 'B3', 'B2'],
};

// MGRS Tile to Timelapse Export Button

var ButtonPanel = ui.Panel({
  layout: ui.Panel.Layout.flow('vertical'),
  style: {width: '10%'}
});

ButtonPanel.add(ui.Button({
  label: 'S2 Timelapse by MGRS Tile',
  style: {stretch: 'horizontal', fontWeight: 'bold', fontSize: '15px', Color: 'black'},
  onClick: function() {
    // Screen Viewcontrols
    Map.clear();
    Map.setControlVisibility(true);
    Map.style().set('cursor', 'crosshair');
    // Adds MGRS Tiles to the Map to help selection
    var sentinel2SceneAreas = ee.FeatureCollection('users/wiell/SepalResources/sentinel2SceneAreas');
    var S2SAVis = sentinel2SceneAreas.style({
      color: 'black',
      width: 2,
      fillColor: 'FFFFFF00',  
      lineType: 'dotted'
    });
    Map.addLayer(S2SAVis,null,'S2Scenes');
    print('Click a suitable Tile - They will be removed afterwards');
    // Select MGRS On-Click
    Map.onClick(function(coords) {
      var Location = coords.lon.toFixed(3) + coords.lat.toFixed(3);
      var Point = ee.Geometry.Point(coords.lon, coords.lat);
      // Clears the MGRS Tiles from view after selection
      Map.clear();
      //MGRS Tile Selector by Point Location
      var Point2MGRS = sentinel2SceneAreas.filterBounds(Point).aggregate_first('name');
      var S2_HR_MGRS = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')
      .filterDate(START, END)
      .filter(ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE', 20))
      .filterMetadata('MGRS_TILE', 'EQUALS', Point2MGRS);
      print('Collection filtered by Tile:');
      print(Point2MGRS);
      
      // Functions to visualise
      var DivProp = S2_HR_MGRS.map(function(img){
        return img.divide(10000).copyProperties(img);
      });
      var VidColl_MGRS = DivProp.map(function(image) {
        return image.visualize(RGBVis);
      });
      // Set the region as the filtered collection
      var Boundary_MGRS = ee.FeatureCollection(S2_HR_MGRS);
      
      Map.addLayer(VidColl_MGRS);
      // Property Extraction 
      var SystemIndex = S2_HR_MGRS.map(function (image) {
        return image.set('SysIndex', image.toDictionary(['system:index']));
      });
      var list = SystemIndex.aggregate_array('SysIndex');
      var list_1st = list.get(0);
      var S2_HR_MGRS_Mosaic = S2_HR_MGRS.mosaic().set(list_1st);
      var index = S2_HR_MGRS_Mosaic.get('system:index');
      var index = index.getInfo().slice(31,37);
      //Export the result to Drive
      Export.video.toDrive({
        folder: 'GEE_Timelapses',
        collection: VidColl_MGRS,
        description: "MGRS" + index + "_Export",
        maxFrames: 216000,
        dimensions: 1080,
        maxPixels: 1e13,
        framesPerSecond: 2,
        region: Boundary_MGRS
      });
      print('Export Task created - check Tasks');
    });
  }
}));
// Adds the Button Panel to the Map
ui.root.add(ButtonPanel);